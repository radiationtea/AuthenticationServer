version: 0.2

phases:
  pre_build:
    commands:
      - echo Move All to Subdirectory
      - rm -rf Auth
      - mv * Auth | mkdir Auth
      - echo Move Dockerfile to root
      - mv Auth/Dockerfile .
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 109743122068.dkr.ecr.ap-northeast-2.amazonaws.com
      - REPOSITORY_URI=109743122068.dkr.ecr.ap-northeast-2.amazonaws.com/3ccert-auth
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - aws ssm get-parameter --name "/3ccert/auth/ormconfig" --output text --with-decryption --query 'Parameter.Value' > db.txt
      - echo Loaded db.txt
      - cat db.txt
      - aws ssm get-parameter --name "/3ccert/auth/appsettings" --output text --with-decryption --query 'Parameter.Value' > appsettings.Development.json
      - echo Loaded appsettings.Development.json
      - cat appsettings.Development.json
      - aws ssm get-parameter --name "/3ccert/auth/solution" --output text --query 'Parameter.Value' > 3C.sln
      - echo Loaded 3C.sln file
      - cat 3C.sln 
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"3ccert-auth","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
    files: imagedefinitions.json
